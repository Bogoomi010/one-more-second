{"ast":null,"code":"var _jsxFileName = \"/Users/kbk-admin/one-more-second/src/pages/Game/components/GameCanvas.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CANVAS_WIDTH = 480;\nconst CANVAS_HEIGHT = 640;\nconst PLAYER_SPEED = 4;\nconst PLAYER_SIZE = 20;\nconst BULLET_RADIUS = 4;\nconst BULLET_SPEED = 3;\nconst MAX_BULLETS_PER_SPAWN = 10;\nconst DIFFICULTY_INCREASE_INTERVAL = 5000; // 5초마다 난이도 증가\n\nexport default function GameCanvas({\n  lives,\n  setLives\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const keysRef = useRef({\n    ArrowLeft: false,\n    ArrowRight: false,\n    ArrowUp: false,\n    ArrowDown: false\n  });\n  const playerRef = useRef({\n    x: CANVAS_WIDTH / 2 - 10,\n    y: CANVAS_HEIGHT - 40\n  });\n  const bulletsRef = useRef([]);\n  const startTimeRef = useRef(Date.now());\n  const gameOverRef = useRef(false);\n  const animationRef = useRef(undefined);\n  const spawnLoopRef = useRef(undefined);\n  const difficultyLoopRef = useRef(undefined);\n  const [isHit, setIsHit] = useState(false);\n  const [bulletsPerSpawn, setBulletsPerSpawn] = useState(1);\n  const currentAngleRef = useRef(0);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext(\"2d\");\n    if (!canvas || !ctx) return;\n    function resetGame() {\n      gameOverRef.current = false;\n      playerRef.current = {\n        x: CANVAS_WIDTH / 2 - 10,\n        y: CANVAS_HEIGHT - 40\n      };\n      bulletsRef.current = [];\n      startTimeRef.current = Date.now();\n      currentAngleRef.current = 0;\n      setBulletsPerSpawn(1);\n      setLives(3);\n\n      // 총알 생성 인터벌 설정\n      spawnLoopRef.current = setInterval(() => {\n        if (!gameOverRef.current) {\n          for (let i = 0; i < bulletsPerSpawn; i++) {\n            spawnSingleBullet();\n          }\n        }\n      }, 500);\n\n      // 난이도 증가 인터벌 설정\n      difficultyLoopRef.current = setInterval(() => {\n        if (!gameOverRef.current && bulletsPerSpawn < MAX_BULLETS_PER_SPAWN) {\n          setBulletsPerSpawn(prev => Math.min(prev + 1, MAX_BULLETS_PER_SPAWN));\n        }\n      }, DIFFICULTY_INCREASE_INTERVAL);\n      gameLoop();\n    }\n    function handleKeyDown(e) {\n      if ([\"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\"].includes(e.key)) {\n        e.preventDefault();\n      }\n      keysRef.current[e.key] = true;\n      if (gameOverRef.current && e.key === \"r\") {\n        resetGame();\n      }\n    }\n    function handleKeyUp(e) {\n      keysRef.current[e.key] = false;\n    }\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"keyup\", handleKeyUp);\n    function spawnSingleBullet() {\n      // 화면 상단 영역에서 랜덤한 X 좌표 선택 (총알이 화면 밖으로 나가지 않도록 여백 고려)\n      const margin = BULLET_RADIUS * 2;\n      const centerX = Math.random() * (CANVAS_WIDTH - margin * 2) + margin;\n      const centerY = BULLET_RADIUS * 2; // 화면 최상단에서 약간 아래에서 시작\n\n      // 플레이어를 향해 발사되도록 각도 계산\n      const targetAngle = Math.atan2(playerRef.current.y + PLAYER_SIZE / 2 - centerY, playerRef.current.x + PLAYER_SIZE / 2 - centerX);\n      const bullet = {\n        x: centerX,\n        y: centerY,\n        angle: targetAngle,\n        speed: BULLET_SPEED\n      };\n      bulletsRef.current.push(bullet);\n    }\n    function checkCollision(px, py, bx, by, br) {\n      const dx = px + PLAYER_SIZE / 2 - bx;\n      const dy = py + PLAYER_SIZE / 2 - by;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      return distance < br + PLAYER_SIZE / 2;\n    }\n    function update() {\n      if (gameOverRef.current) return;\n      const keys = keysRef.current;\n      if (keys.ArrowLeft) playerRef.current.x -= PLAYER_SPEED;\n      if (keys.ArrowRight) playerRef.current.x += PLAYER_SPEED;\n      if (keys.ArrowUp) playerRef.current.y -= PLAYER_SPEED;\n      if (keys.ArrowDown) playerRef.current.y += PLAYER_SPEED;\n      playerRef.current.x = Math.max(0, Math.min(CANVAS_WIDTH - PLAYER_SIZE, playerRef.current.x));\n      playerRef.current.y = Math.max(0, Math.min(CANVAS_HEIGHT - PLAYER_SIZE, playerRef.current.y));\n      bulletsRef.current.forEach(b => {\n        b.x += Math.cos(b.angle) * b.speed;\n        b.y += Math.sin(b.angle) * b.speed;\n      });\n      for (const b of bulletsRef.current) {\n        if (checkCollision(playerRef.current.x, playerRef.current.y, b.x, b.y, BULLET_RADIUS)) {\n          bulletsRef.current = bulletsRef.current.filter(bullet => bullet !== b); // 피격된 총알 제거\n          setIsHit(true);\n          setTimeout(() => setIsHit(false), 150);\n          if (lives > 1) {\n            setLives(lives - 1);\n          } else {\n            gameOverRef.current = true;\n            setLives(0);\n            cancelAnimationFrame(animationRef.current);\n            clearInterval(spawnLoopRef.current);\n            clearInterval(difficultyLoopRef.current);\n          }\n          return;\n        }\n      }\n      bulletsRef.current = bulletsRef.current.filter(b => b.x >= 0 && b.x <= CANVAS_WIDTH && b.y >= 0 && b.y <= CANVAS_HEIGHT);\n    }\n    function draw() {\n      if (!ctx) return;\n\n      // 배경을 어두운색으로 채우기\n      ctx.fillStyle = \"#18181b\";\n      ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\n      // 피격 시 붉은색 오버레이\n      if (isHit) {\n        ctx.save();\n        ctx.globalAlpha = 0.5;\n        ctx.fillStyle = \"#f00\";\n        ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n        ctx.restore();\n      }\n      ctx.fillStyle = \"#00f\";\n      ctx.fillRect(playerRef.current.x, playerRef.current.y, PLAYER_SIZE, PLAYER_SIZE);\n      ctx.fillStyle = \"#f00\";\n      bulletsRef.current.forEach(b => {\n        ctx.beginPath();\n        ctx.arc(b.x, b.y, BULLET_RADIUS, 0, Math.PI * 2);\n        ctx.fill();\n      });\n      const elapsedSec = Math.floor((Date.now() - startTimeRef.current) / 1000);\n      ctx.fillStyle = \"#fff\";\n      ctx.font = \"16px monospace\";\n      ctx.fillText(`Survived: ${elapsedSec}s`, 10, 20);\n      if (gameOverRef.current) {\n        ctx.fillStyle = \"#fff\";\n        ctx.font = \"bold 32px monospace\";\n        ctx.textAlign = \"center\";\n        ctx.fillText(\"GAME OVER\", CANVAS_WIDTH / 2, CANVAS_HEIGHT / 2);\n        ctx.font = \"16px monospace\";\n        ctx.fillText(\"Press R to Restart\", CANVAS_WIDTH / 2, CANVAS_HEIGHT / 2 + 30);\n      }\n    }\n    function gameLoop() {\n      update();\n      draw();\n      if (!gameOverRef.current) {\n        animationRef.current = requestAnimationFrame(gameLoop);\n      }\n    }\n    gameLoop();\n    return () => {\n      cancelAnimationFrame(animationRef.current);\n      clearInterval(spawnLoopRef.current);\n      clearInterval(difficultyLoopRef.current);\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      window.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  }, [lives, setLives, isHit, bulletsPerSpawn]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: CANVAS_WIDTH,\n    height: CANVAS_HEIGHT,\n    style: {\n      display: 'block',\n      margin: '0 auto',\n      background: '#18181b',\n      border: '2px solid #222',\n      maxWidth: 480,\n      height: 640\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n_s(GameCanvas, \"zP/Y6AmBVb2fftk1knVSX5xpjUA=\");\n_c = GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["useEffect","useRef","useState","jsxDEV","_jsxDEV","CANVAS_WIDTH","CANVAS_HEIGHT","PLAYER_SPEED","PLAYER_SIZE","BULLET_RADIUS","BULLET_SPEED","MAX_BULLETS_PER_SPAWN","DIFFICULTY_INCREASE_INTERVAL","GameCanvas","lives","setLives","_s","canvasRef","keysRef","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","playerRef","x","y","bulletsRef","startTimeRef","Date","now","gameOverRef","animationRef","undefined","spawnLoopRef","difficultyLoopRef","isHit","setIsHit","bulletsPerSpawn","setBulletsPerSpawn","currentAngleRef","canvas","current","ctx","getContext","resetGame","setInterval","i","spawnSingleBullet","prev","Math","min","gameLoop","handleKeyDown","e","includes","key","preventDefault","handleKeyUp","window","addEventListener","margin","centerX","random","centerY","targetAngle","atan2","bullet","angle","speed","push","checkCollision","px","py","bx","by","br","dx","dy","distance","sqrt","update","keys","max","forEach","b","cos","sin","filter","setTimeout","cancelAnimationFrame","clearInterval","draw","fillStyle","fillRect","clearRect","save","globalAlpha","restore","beginPath","arc","PI","fill","elapsedSec","floor","font","fillText","textAlign","requestAnimationFrame","removeEventListener","ref","width","height","style","display","background","border","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kbk-admin/one-more-second/src/pages/Game/components/GameCanvas.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nconst CANVAS_WIDTH = 480;\nconst CANVAS_HEIGHT = 640;\nconst PLAYER_SPEED = 4;\nconst PLAYER_SIZE = 20;\nconst BULLET_RADIUS = 4;\nconst BULLET_SPEED = 3;\nconst MAX_BULLETS_PER_SPAWN = 10;\nconst DIFFICULTY_INCREASE_INTERVAL = 5000; // 5초마다 난이도 증가\n\ninterface GameCanvasProps {\n  lives: number;\n  setLives: (lives: number) => void;\n}\n\nexport default function GameCanvas({ lives, setLives }: GameCanvasProps) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const keysRef = useRef({ ArrowLeft: false, ArrowRight: false, ArrowUp: false, ArrowDown: false });\n  const playerRef = useRef({ x: CANVAS_WIDTH / 2 - 10, y: CANVAS_HEIGHT - 40 });\n  const bulletsRef = useRef<any[]>([]);\n  const startTimeRef = useRef(Date.now());\n  const gameOverRef = useRef(false);\n  const animationRef = useRef<number | undefined>(undefined);\n  const spawnLoopRef = useRef<NodeJS.Timeout | undefined>(undefined);\n  const difficultyLoopRef = useRef<NodeJS.Timeout | undefined>(undefined);\n  const [isHit, setIsHit] = useState(false);\n  const [bulletsPerSpawn, setBulletsPerSpawn] = useState(1);\n  const currentAngleRef = useRef(0);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas?.getContext(\"2d\");\n    if (!canvas || !ctx) return;\n\n    function resetGame() {\n      gameOverRef.current = false;\n      playerRef.current = { x: CANVAS_WIDTH / 2 - 10, y: CANVAS_HEIGHT - 40 };\n      bulletsRef.current = [];\n      startTimeRef.current = Date.now();\n      currentAngleRef.current = 0;\n      setBulletsPerSpawn(1);\n      setLives(3);\n      \n      // 총알 생성 인터벌 설정\n      spawnLoopRef.current = setInterval(() => {\n        if (!gameOverRef.current) {\n          for (let i = 0; i < bulletsPerSpawn; i++) {\n            spawnSingleBullet();\n          }\n        }\n      }, 500);\n\n      // 난이도 증가 인터벌 설정\n      difficultyLoopRef.current = setInterval(() => {\n        if (!gameOverRef.current && bulletsPerSpawn < MAX_BULLETS_PER_SPAWN) {\n          setBulletsPerSpawn(prev => Math.min(prev + 1, MAX_BULLETS_PER_SPAWN));\n        }\n      }, DIFFICULTY_INCREASE_INTERVAL);\n\n      gameLoop();\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if ([\"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\"].includes(e.key)) {\n        e.preventDefault();\n      }\n      keysRef.current[e.key as keyof typeof keysRef.current] = true;\n      if (gameOverRef.current && e.key === \"r\") {\n        resetGame();\n      }\n    }\n\n    function handleKeyUp(e: KeyboardEvent) {\n      keysRef.current[e.key as keyof typeof keysRef.current] = false;\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"keyup\", handleKeyUp);\n\n    function spawnSingleBullet() {\n      // 화면 상단 영역에서 랜덤한 X 좌표 선택 (총알이 화면 밖으로 나가지 않도록 여백 고려)\n      const margin = BULLET_RADIUS * 2;\n      const centerX = Math.random() * (CANVAS_WIDTH - margin * 2) + margin;\n      const centerY = BULLET_RADIUS * 2; // 화면 최상단에서 약간 아래에서 시작\n      \n      // 플레이어를 향해 발사되도록 각도 계산\n      const targetAngle = Math.atan2(\n        playerRef.current.y + PLAYER_SIZE / 2 - centerY,\n        playerRef.current.x + PLAYER_SIZE / 2 - centerX\n      );\n      \n      const bullet = {\n        x: centerX,\n        y: centerY,\n        angle: targetAngle,\n        speed: BULLET_SPEED\n      };\n      \n      bulletsRef.current.push(bullet);\n    }\n\n    function checkCollision(px: number, py: number, bx: number, by: number, br: number) {\n      const dx = px + PLAYER_SIZE / 2 - bx;\n      const dy = py + PLAYER_SIZE / 2 - by;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      return distance < br + PLAYER_SIZE / 2;\n    }\n\n    function update() {\n      if (gameOverRef.current) return;\n\n      const keys = keysRef.current;\n      if (keys.ArrowLeft) playerRef.current.x -= PLAYER_SPEED;\n      if (keys.ArrowRight) playerRef.current.x += PLAYER_SPEED;\n      if (keys.ArrowUp) playerRef.current.y -= PLAYER_SPEED;\n      if (keys.ArrowDown) playerRef.current.y += PLAYER_SPEED;\n\n      playerRef.current.x = Math.max(0, Math.min(CANVAS_WIDTH - PLAYER_SIZE, playerRef.current.x));\n      playerRef.current.y = Math.max(0, Math.min(CANVAS_HEIGHT - PLAYER_SIZE, playerRef.current.y));\n\n      bulletsRef.current.forEach((b) => {\n        b.x += Math.cos(b.angle) * b.speed;\n        b.y += Math.sin(b.angle) * b.speed;\n      });\n\n      for (const b of bulletsRef.current) {\n        if (checkCollision(playerRef.current.x, playerRef.current.y, b.x, b.y, BULLET_RADIUS)) {\n          bulletsRef.current = bulletsRef.current.filter((bullet) => bullet !== b); // 피격된 총알 제거\n          setIsHit(true);\n          setTimeout(() => setIsHit(false), 150);\n          if (lives > 1) {\n            setLives(lives - 1);\n          } else {\n            gameOverRef.current = true;\n            setLives(0);\n            cancelAnimationFrame(animationRef.current!);\n            clearInterval(spawnLoopRef.current);\n            clearInterval(difficultyLoopRef.current);\n          }\n          return;\n        }\n      }\n\n      bulletsRef.current = bulletsRef.current.filter((b) => b.x >= 0 && b.x <= CANVAS_WIDTH && b.y >= 0 && b.y <= CANVAS_HEIGHT);\n    }\n\n    function draw() {\n      if (!ctx) return;\n      \n      // 배경을 어두운색으로 채우기\n      ctx.fillStyle = \"#18181b\";\n      ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      \n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\n      // 피격 시 붉은색 오버레이\n      if (isHit) {\n        ctx.save();\n        ctx.globalAlpha = 0.5;\n        ctx.fillStyle = \"#f00\";\n        ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n        ctx.restore();\n      }\n\n      ctx.fillStyle = \"#00f\";\n      ctx.fillRect(playerRef.current.x, playerRef.current.y, PLAYER_SIZE, PLAYER_SIZE);\n\n      ctx.fillStyle = \"#f00\";\n      bulletsRef.current.forEach((b) => {\n        ctx.beginPath();\n        ctx.arc(b.x, b.y, BULLET_RADIUS, 0, Math.PI * 2);\n        ctx.fill();\n      });\n\n      const elapsedSec = Math.floor((Date.now() - startTimeRef.current) / 1000);\n      ctx.fillStyle = \"#fff\";\n      ctx.font = \"16px monospace\";\n      ctx.fillText(`Survived: ${elapsedSec}s`, 10, 20);\n\n      if (gameOverRef.current) {\n        ctx.fillStyle = \"#fff\";\n        ctx.font = \"bold 32px monospace\";\n        ctx.textAlign = \"center\";\n        ctx.fillText(\"GAME OVER\", CANVAS_WIDTH / 2, CANVAS_HEIGHT / 2);\n        ctx.font = \"16px monospace\";\n        ctx.fillText(\"Press R to Restart\", CANVAS_WIDTH / 2, CANVAS_HEIGHT / 2 + 30);\n      }\n    }\n\n    function gameLoop() {\n      update();\n      draw();\n      if (!gameOverRef.current) {\n        animationRef.current = requestAnimationFrame(gameLoop);\n      }\n    }\n\n    gameLoop();\n\n    return () => {\n      cancelAnimationFrame(animationRef.current!);\n      clearInterval(spawnLoopRef.current);\n      clearInterval(difficultyLoopRef.current);\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      window.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  }, [lives, setLives, isHit, bulletsPerSpawn]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={CANVAS_WIDTH}\n      height={CANVAS_HEIGHT}\n      style={{\n        display: 'block',\n        margin: '0 auto',\n        background: '#18181b',\n        border: '2px solid #222',\n        maxWidth: 480,\n        height: 640\n      }}\n    />\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}